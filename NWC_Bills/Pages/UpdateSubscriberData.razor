@page "/UpdateSubscriberData"
@using NWC_Bills.Models;
@using NWC_Bills.Services;

@inject IUnitOfWork _unitOfWork;
@inject IJSRuntime jsRunTime;

<PageTitle>Update Subscriber Data</PageTitle>



<div class="p-3" style="float:right">
    <EditForm EditContext="@editContext">
        <DataAnnotationsValidator />
        <div class="form-group" style="width: 300px; margin-left:200px">
            <label class="form-label">رقم هوية المشترك</label>
            <InputText class="form-control form-control-lg" placeholder="1002442485 :مثــــال " @bind-Value="subscriberFile.NwcSubscriberFileId" dir="auto" />
            <br />
            <button type="submit" class="btn btn-primary" @onclick="@( () => ShowInfo())" id="show-btn">عرض المشترك</button>
            <ValidationMessage For="@(() => subscriberFile.NwcSubscriberFileId)"></ValidationMessage>
        </div>
        <br />
        @if (subscriberFile.NwcSubscriberFileName is not null)
        {
            <div class="form-group">
                <label class="form-label">الاسم</label>
                <InputText class="form-control form-control-lg" @bind-Value="subscriberFile.NwcSubscriberFileName" dir="rtl" />
                <ValidationMessage For="@(() => subscriberFile.NwcSubscriberFileName)"></ValidationMessage>
            </div>
            <div class="form-group">
                <label class="form-label">المدينة</label>
                <InputText class="form-control form-control-lg" @bind-Value="subscriberFile.NwcSubscriberFileCity" dir="rtl" />
                <ValidationMessage For="@(() => subscriberFile.NwcSubscriberFileCity)"></ValidationMessage>
            </div>
            <div class="form-group">
                <label class="form-label">الحي</label>
                <InputText class="form-control form-control-lg" @bind-Value="subscriberFile.NwcSubscriberFileArea" dir="rtl" />
                <ValidationMessage For="@(() => subscriberFile.NwcSubscriberFileArea)"></ValidationMessage>
            </div>
            <div class="form-group">
                <label class="form-label">رقم الجوال</label>
                <InputText class="form-control form-control-lg" @bind-Value="subscriberFile.NwcSubscriberFileMobile" dir="auto" />
                <ValidationMessage For="@(() => subscriberFile.NwcSubscriberFileMobile)"></ValidationMessage>
            </div>
            <div class="form-group mt-3">
                <button type="submit" class="btn btn-primary" @onclick="@( () => HandleSubmit())">حفظ</button>
            </div>
        }
        

    </EditForm>
</div>

@code {
    NwcSubscriberFile? subscriberFile = new();
    EditContext? editContext;
    IList<NwcSubscriberFile> subscribersData;
    protected override void OnInitialized()
    {
        editContext = new(subscriberFile);
        subscribersData =  _unitOfWork.SubscribersData.GetAll();
    }
    private async Task ShowInfo()
    {
        if (subscriberFile.NwcSubscriberFileId is not null 
            && subscriberFile.NwcSubscriberFileId.Length > 0 
            && subscriberFile.NwcSubscriberFileId.Length <11)
        {
            var curSub =  _unitOfWork.SubscribersData.GetFirstOrDefault(x => x.NwcSubscriberFileId == subscriberFile.NwcSubscriberFileId);
            if(curSub is not null)
            {
                subscriberFile = curSub;
                await OnAfterRenderAsync(false);
            }
            else
            {
                await jsRunTime.InvokeAsync<string>("fadeAlret", "رقم الهوية غير موجود");
            }
        }
        else
        {
            await jsRunTime.InvokeAsync<string>("fadeAlret", "لا توجد بيانات لهذا الرقم");
        }
    }
    private async Task HandleSubmit()
    {
        editContext = new(subscriberFile);
        if (editContext is not null && editContext.Validate())
        {
            bool confirmed = await jsRunTime.InvokeAsync<bool>("confirm", "هل تريد تعديل بيانات هذا المشترك بشكل نهائي؟");
            if (confirmed && subscriberFile is not null)
            {
                var UpdatedSub = _unitOfWork.SubscribersData.GetFirstOrDefault
                (x => x.NwcSubscriberFileId == subscriberFile.NwcSubscriberFileId);
                if (UpdatedSub is not null && UpdatedSub.NwcSubscriberFileId != "0")
                {
                    _unitOfWork.SubscribersData.Update(subscriberFile);
                    await _unitOfWork.Save();
                    _unitOfWork.ClearTracks();
                    await jsRunTime.InvokeAsync<string>("fadeAlret", "!تم تحديث البيانات");
                }
                else
                {
                    await jsRunTime.InvokeAsync<string>("fadeAlret", "!فشل تحديث البيانات");
                }
            }
        }
        else
        {
            await jsRunTime.InvokeAsync<string>("fadeAlret", "!فشل تحديث البيانات");
        }
    }
}
